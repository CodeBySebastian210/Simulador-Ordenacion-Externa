/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Lenovo
 */
import java.util.ArrayList;
import java.util.Random;



public class FrmOrdenacion extends javax.swing.JFrame {
    private ArrayList<Integer> listaNumeros = new ArrayList<>();
    
    private ArrayList<Integer> mezclaDirecta(ArrayList<Integer> lista) {
        logProceso("Iniciando Mezcla Directa...");
        if (lista.size() <= 1) {
            return lista;
        }

        int medio = lista.size() / 2;

        ArrayList<Integer> izquierda = new ArrayList<>(lista.subList(0, medio));
        ArrayList<Integer> derecha = new ArrayList<>(lista.subList(medio, lista.size()));

        logProceso("División en: " + izquierda + " y " + derecha);

        izquierda = mezclaDirecta(izquierda);
        derecha = mezclaDirecta(derecha);

        ArrayList<Integer> resultado = fusionar(izquierda, derecha);

        logProceso("Fusión: " + resultado);

        return resultado;
    }

    private ArrayList<Integer> fusionar(ArrayList<Integer> izquierda, ArrayList<Integer> derecha) {
        ArrayList<Integer> resultado = new ArrayList<>();
        int i = 0, j = 0;

        while (i < izquierda.size() && j < derecha.size()) {
            if (izquierda.get(i) <= derecha.get(j)) {
                resultado.add(izquierda.get(i));
                i++;
            } else {
                resultado.add(derecha.get(j));
                j++;
            }
        }

        while (i < izquierda.size()) {
            resultado.add(izquierda.get(i));
            i++;
        }
        while (j < derecha.size()) {
            resultado.add(derecha.get(j));
            j++;
        }

        return resultado;
    }
    
    private ArrayList<Integer> fusionNatural(ArrayList<Integer> lista) {
        logProceso("Iniciando Fusión Natural...");

        ArrayList<ArrayList<Integer>> runs = new ArrayList<>();

        ArrayList<Integer> actual = new ArrayList<>();
        actual.add(lista.get(0));

        for (int i = 1; i < lista.size(); i++) {
            if (lista.get(i) >= lista.get(i - 1)) {
                actual.add(lista.get(i));
            } else {
                runs.add(new ArrayList<>(actual));
                actual.clear();
                actual.add(lista.get(i));
            }
        }
        runs.add(actual);

        logProceso("Subsecuencias iniciales: " + runs);

        while (runs.size() > 1) {
            ArrayList<Integer> izquierda = runs.remove(0);
            ArrayList<Integer> derecha = runs.remove(0);
            ArrayList<Integer> fusion = fusionar(izquierda, derecha);

            logProceso("Fusión: " + izquierda + " + " + derecha + " => " + fusion);

            runs.add(fusion);
        }

        return runs.get(0);
    }

    /**
     * Creates new form FrmOrdenacion
     */
    public FrmOrdenacion() {
        initComponents();
    }
    
    private void logProceso(String mensaje) {
        txtProceso.append(mensaje + "\n");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnCargar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtNumeros = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        cmbAlgoritmo = new javax.swing.JComboBox<>();
        btnOrdenar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtProceso = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnCargar.setText("Cargar Números Aleatorios");
        btnCargar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCargarActionPerformed(evt);
            }
        });

        jLabel1.setText("Números cargados");

        txtNumeros.setEditable(false);
        txtNumeros.setColumns(20);
        txtNumeros.setRows(5);
        txtNumeros.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentMoved(java.awt.event.ComponentEvent evt) {
                txtNumerosComponentMoved(evt);
            }
        });
        jScrollPane1.setViewportView(txtNumeros);

        jLabel2.setText("Seleccione Algoritmo");

        cmbAlgoritmo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mezcla Directa", "Fusión Natural" }));

        btnOrdenar.setText("Ordenar");
        btnOrdenar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOrdenarActionPerformed(evt);
            }
        });

        jLabel3.setText("Proceso de ordenación");

        txtProceso.setEditable(false);
        txtProceso.setColumns(20);
        txtProceso.setRows(5);
        jScrollPane2.setViewportView(txtProceso);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(176, 176, 176))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnOrdenar)
                        .addGap(206, 206, 206))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(cmbAlgoritmo, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(147, 147, 147))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(189, 189, 189))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(200, 200, 200)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(158, 158, 158)
                        .addComponent(btnCargar))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 393, Short.MAX_VALUE)
                            .addComponent(jScrollPane1))))
                .addContainerGap(67, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(btnCargar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cmbAlgoritmo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnOrdenar)
                .addGap(46, 46, 46)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNumerosComponentMoved(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_txtNumerosComponentMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNumerosComponentMoved

    private void btnCargarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCargarActionPerformed
        // TODO add your handling code here:
        listaNumeros.clear(); 
        Random random = new Random();

        for (int i = 0; i < 15; i++) {
            listaNumeros.add(random.nextInt(100) + 1);
        }

        txtNumeros.setText(listaNumeros.toString());
        txtProceso.setText("Se han generado 15 números aleatorios.\n");
    }//GEN-LAST:event_btnCargarActionPerformed

    private void btnOrdenarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOrdenarActionPerformed
        // TODO add your handling code here:
        if (listaNumeros.isEmpty()) {
            txtProceso.setText("Primero cargue los números aleatorios.\n");
            return;
        }

        txtProceso.setText(""); 

        ArrayList<Integer> listaOrdenada = new ArrayList<>();
        String algoritmo = cmbAlgoritmo.getSelectedItem().toString();

        if (algoritmo.equals("Mezcla Directa")) {
            listaOrdenada = mezclaDirecta(new ArrayList<>(listaNumeros));
        } else if (algoritmo.equals("Fusión Natural")) {
            listaOrdenada = fusionNatural(new ArrayList<>(listaNumeros));
        }

        txtProceso.append("Resultado final: " + listaOrdenada + "\n");
    }//GEN-LAST:event_btnOrdenarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmOrdenacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmOrdenacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmOrdenacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmOrdenacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmOrdenacion().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCargar;
    private javax.swing.JButton btnOrdenar;
    private javax.swing.JComboBox<String> cmbAlgoritmo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea txtNumeros;
    private javax.swing.JTextArea txtProceso;
    // End of variables declaration//GEN-END:variables
}
